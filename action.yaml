name: Create Commit By GitHub API
description: Commit changes by GitHub API
author: Shunsuke Suzuki
branding:
  icon: git-commit
  color: blue
inputs:
  github_token:
    description: |
      GitHub Access Token
      contents:write - Push commits
    required: false
  app_id:
    description: |
      GitHub App ID
    required: false
  app_private_key:
    description: |
      GitHub App Private Key
    required: false
  commit_message:
    description: |
      Commit message
    required: false
    default: "commit changes"
  branch:
    description: |
      A Pushed branch.
      By default, GITHUB_HEAD_REF or GITHUB_REF_NAME is used.
    required: false
  parent_branch:
    description: |
      If a branch is newly created, the parent branch is used as the base branch.
      By default, the default branch is used.
    required: false
  repository:
    description: |
      A Pushed repository.
      By default, GITHUB_REPOSITORY is used.
    required: false
  root_dir:
    description: |
      The Git root directory for the files to commit.
    required: false
  files:
    description: |
      Files to commit. Unchanged files are ignored.
      To specify multiple files, separate them with a newline.
      By default, all modified and untracked files are committed.
      git ls-files --modified --others --exclude-standard
    required: false
  workflow:
    description: |
      How to handle changed workflow files.
      This input is used if `app_id` and `app_private_key` are specified.
      To commit workflow files, the permission `workflows:write` is required.
      The following values are available:
      1. allow - Grant `workflows:write` permission when creating an access token
      2. deny - Fail if workflow files are changed
      3. ignore - Ignore workflow files
    required: false
    default: allow
outputs:
  pushed:
    description: |
      Whether the commit was pushed.
      If the commit is not pushed, it means that there are no changes to commit.
    value: ${{ steps.files.outputs.files != '' && steps.commit.outputs.pushed == 'true' }}
  sha:
    description: |
      Full length commit SHA to be pushed.
    value: ${{steps.commit.outputs.sha}}
runs:
  using: composite
  steps:
    # List changed files
    - shell: bash
      id: files
      working-directory: ${{ inputs.root_dir }}
      env:
        FILES: ${{ inputs.files }}
        WORKFLOW: ${{ inputs.workflow }}
      run: |
        if [ -z "$FILES" ]; then
          FILES=$(git ls-files --modified --others --exclude-standard)
          if [ -z "$FILES" ]; then
            echo "::notice:: No changes" >&2
            exit 0
          fi
        fi
        if [ "$WORKFLOW" = ignore ]; then
          echo "::notice:: Ignore workflow files" >&2
          FILES=$(echo "$FILES" | grep -vE '^\.github/workflows/')
        fi
        if [ "$WORKFLOW" = allow ]; then
          if echo "$FILES" | grep -qE '^\.github/workflows/'; then
            echo "::notice:: Grant workflows:write permission" >&2
            echo 'permission_workflows=write' >> "$GITHUB_OUTPUT"
          fi
        fi
        {
          echo 'files<<EOF'
          echo "$FILES"
          echo EOF
        } >> "$GITHUB_OUTPUT"

    - shell: bash
      id: repo_name
      if: steps.files.outputs.files != ''
      run: |
        repo=${REPOSITORY:-$GITHUB_REPOSITORY}
        echo "value=${repo#*/}" >> "$GITHUB_OUTPUT"
      env:
        REPOSITORY: ${{ inputs.repository }}

    - uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
      id: token
      if: steps.files.outputs.files && inputs.app_id && inputs.github_token == ''
      with:
        app-id: ${{ inputs.app_id }}
        private-key: ${{ inputs.app_private_key }}
        repositories: ${{ steps.repo_name.outputs.value }}
        permission-contents: write
        permission-workflows: ${{ steps.files.outputs.permission_workflows }}

    - uses: suzuki-shunsuke/commit-action/js@735cc4706b79c8c38d1066c7e0b73f4bc3641602
      id: commit
      with:
        github_token: ${{ inputs.github_token && inputs.github_token || (steps.token.outputs.token && steps.token.outputs.token || github.token) }}
        repository: ${{ inputs.repository }}
        branch: ${{ inputs.branch }}
        files: ${{ steps.files.outputs.files }}
        commit_message: ${{ inputs.commit_message }}
        parent_branch: ${{ inputs.parent_branch }}
        root_dir: ${{ inputs.root_dir }}
